apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.auth.appLabel }}
  replicas: {{ .Values.auth.appReplicaCount }}
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Values.auth.appLabel }}
    spec:
      containers:
        - image: "{{ .Values.dockerHubRegistryRepoName }}:{{ .Values.auth.serviceName }}"
          imagePullPolicy: Always
          name: {{ .Values.auth.podName }}
          ports:
            - containerPort: {{ .Values.auth.appPort }}
          env:
            - name: APP_PORT
              value: "{{ .Values.auth.appPort }}"
            - name: POSTGRES_HOST
              value: {{ .Values.auth.DBServiceName }}
            - name: POSTGRES_PORT
              value: "{{ .Values.auth.DBPortNum }}"
            - name: POSTGRES_USER
              value: {{ .Values.auth.DBUser }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.auth.DBPass }}
            - name: POSTGRES_DB
              value: {{ .Values.auth.DBName }}
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.5"
            limits:
              memory: "512Mi"
              cpu: "1"

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.auth.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: {{ .Values.auth.appPort }}
      targetPort: {{ .Values.auth.appPort }}
  selector:
    app: {{ .Values.auth.appLabel }}
